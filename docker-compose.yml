services:
  fastapi:
    build:
      context: ./app
    container_name: fastapi
    env_file:
      - .env
    ports:
      - "80:80"
    expose:
      - "80"
    depends_on:
      rabbitmq:
        condition: service_healthy
      ollama:
        condition: service_started
    volumes:
      - ./app:/app
    networks:
      - app_network

  filter:
    build:
      context: ./filter
    container_name: filter_service
    runtime: nvidia
    environment:
      - PYTHONUNBUFFERED=1
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
      ollama:
        condition: service_started
    volumes:
      - ./filter:/filter
      - ${HF_HUB}:/models
      - ${DATASET}:/data
    networks:
      - app_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    env_file:
      - .env
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    networks:
      - app_network

  ollama:
    image: ollama/ollama
    container_name: ollama
    runtime: nvidia
    env_file:
      - .env
    ports:
      - "11434:11434"
    volumes:
      - ${OLLAMA_MODELS_PATH}:/root/.ollama
    networks:
      - app_network

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app_network

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - app_network

networks:
  app_network:

volumes:
  rabbitmq:
  grafana-data: